import signal, random
import keyboard
#import sysv_ipc
from threading import Semaphore
from multiprocessing import Process

tabOffres = []
tabEchange = []
semSignal = Semaphore(0) #va empecher qu'un autre joueur clique sur un signal alors qu'un joueur est en train de faire une action apres avoir fait un signal
semEchange = [] #va contenir les semaphores correspond a chaque joueur, qui vont permettre l'échange e cartes [ Semaphore(0) for i in range(nbJoueurs) ]

    
def handler():
    global tabEchange
    while True:
        semSignal.acquire()
        if keyboard.read_key == "j": #le joueur appuie sur la touche j car il veut faire quelquechose (j car à peu pres au milieu du clavier)
            qui=input("qui veut faire une action?")
            quoi=input("quelle action veux-tu faire ? Si tu veux faire une offre entre O, si tu veux accepter une offre, entre A")
            if quoi=="O":
                combien=input("Combien de cartes proposes-tu ?")
                tabOffres[int("qui")] = combien
            if quoi=="A":
                num_offre=input("L'offre de quel joueur veux-tu accepter ? Entre le numero du joueur associe.")
                # on indique dans le tabEchange que "qui" et "num_offre" veulent échanger
                tabEchange[qui]=1 #celui qui accepte l'offre
                tabEchange[num_offre]=2 #celui qui avait fait l'offre
                while tabEchange[qui] != 0 or tabEchange[num_offre] !=0 : #permet d'avoir le temps de faire les échanges de cartes entre les deux joueurs
                    pass
                #echangerCartes(qui,num_offre) #demander quelles cartes "qui" souhaite echanger puis realiser l'echange entre qui et le joueur de l'offre
        if keyboard.read_key == "n": #Le joueur a 5 cartes identiques, il appuie sur la "cloche"
            gagnant=input("qui a sonne la cloche ?")
            voirCartes(gagnant)  
            break
    semSignal.release()

def echangerCartes(joueur1, joueur2):
    print("on echange les cartes de joueur 1 et joueur 2")

def voirCartes(joueur):
    print("on affiche les cartes")

#Rajouter conition pas 4 cartes identiques dans un deck lors de la distribution !!
def distribCartes(nbJoueurs): 
    typeCartesJeu = ["Montgolfière", "Camion", "Snowboard", "Trotinette", "Deltaplane"] #cartes disponibles dans le jeu, chacune en 5 exemplaires
    ensembleDeck = [ [0 for i in range(5)] for _ in range(nbJoueurs) ] #il y a autant de deck que de joueurs et chaque deck contient 5 cartes
    typeCartePartie = [] #va contenir les types de carte qu'on utilise pour la partie, il y a autant de types que de nombre de joueurs
    
    #on choisit avec quels types de cartes on va jouer durant la partie
    for i in range(nbJoueurs):
        x = typeCartesJeu[random.randint(0,len(typeCartesJeu)-1)] #on tire un type de cartes au hasard dans le jeu
        typeCartePartie.append(x) #on inclut ce type dans notre partie
        typeCartesJeu.remove(x)   #on le supprime de la liste du jeu pour ne pas avoir de doublons
    
    #on veut définir l'ensemble des cartes de la partie, il y a 5 cartes de chaque type
    ensemblePartie = []
    for i in range(len(typeCartePartie)):
        tab = [typeCartePartie[i]]*5
        ensembleJeu = ensembleJeu + tab
    
    #on distribue aléatoirement 5 cartes aux joueurs
    for i in range(nbJoueurs):
        for j in range(0,5):
            carte = ensembleJeu[random.randint(0,len(ensembleJeu)-1)]
            ensembleDeck[i][j] = carte
            ensembleJeu.remove(carte)
      
    return ensembleDeck

def player(id, deck):
    print("ok")
    voirCartes()

def game(nbJoueurs):
    global semEchange
    decks = distribCartes(nbJoueurs)
    players = [ Process(target = player, args = (i, decks[i],)) for i in range(nbJoueurs) ]
    handler()         
            
if __name__ == "main":
    jouer = 0
    while jouer == 0:
        nbJoueurs=0
        while (nbJoueurs > 6) and (nbJoueurs < 3) :
            nbJoueurs = int(input("Combien de joueurs vont jouer ?"))
        partie = Process(target = game, args = (nbJoueurs,))
        partie.start()
        partie.join()
        jouer = input("Voulez-vous rejouer ? Entrer 0 pour oui ou 1 pour non")
